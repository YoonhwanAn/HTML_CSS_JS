// 1. 정답만 쓰지말고 왜 그렇게 작성을 했는지, 
      동일한 표현은 무엇인지, 
      오류가 발생한 내역은 뭔지 등등을 작성하는 것이 도움이 됨.

// 2. html 추가 태그
    <details> & <summary> 
    -> <summary>에 표시된 내용만 표시되다가 ▶버튼을 누르면 하기내용 추가로 나옴.
    -> 해당기능을 이용하면 아코디언 메뉴를 쉽게 만들 수 있음.
    -> 기존에는 해당 기능 없이 CSS, JS를 버무려야했음.
    https://developer.mozilla.org/ko/docs/Web/HTML/Reference/Elements/details
    
    (작성 예1)
    <details>
      <summary>Details</summary>
      Something small enough to escape casual notice.
    </details>

    (작성 예2)
    <details open> <!-- open을 이용하면 열린 상태로 초기 출력가능-->
      <summary><strong>Overview</strong></summary>
      <ol>
        <li>Cash on hand: $500.00</li>
        <li>Current invoice: $75.30</li>
        <li>Due date: 5/6/19</li>
      </ol>
    </details>

// 3. 함수(function)
    기능을 가진 서브(sub) 프로그램
    단점: 다른위치에 있는 함수를 불러오므로 속도저하가 약간 있음.
    장점: 1) 함수를 한번 작성해두면 동일한 기능의 코드를 다시 작성해도 되지 않음. (반복 호출 가능)
          2) 함수 내부를 수정 시 1회만 수정하면 호출된 모든 코드 적용됨.
    
    자판기    = 함수
    자판기명  = 함수명
    투입구    = 매개변수(인자)
    몸체      = 몸통(코드)
    결과      = 리턴(반환)

// 4. 자바스크립트는 함수에 리턴값을 표기하지 않음.
    1)기명함수
      function 함수명() {

      }
    2)익명함수
    3)화살표함수 등