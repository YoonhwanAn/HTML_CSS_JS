// 1. regex - 정규 표현식 (Regular expression)
    입력을 받을 때 입력사양에 맞지 않는 것을 걸러내는 용도.
    (eX) 아이디(영어로만, 길이 10글자 내외), 비밀번호(영어 소문자, 대문자,숫자, 특수문자), 이메일...

// 2. html에도 정규식판단은 기능은 있으나, 브라우저마다 해석을 다르게 할 수있기에 js로 해석하는 것이 용이

// 3. input을 사용하지 않는 입력요소가 몇개 있음.
    textarea, ... , ... 

// 4. 전송을 할 때, name이 있어야 값이 전달됨.
    -> js를 사용하면 없어도 전송 가능하다.

// 5. flex box
    felx box 이전에는 float: left; 등을 이용하여 배치를 했으나, 
    flex box가 생긴 후 배치의 활용성이 굉장히 다양해졌음.
    https://cssreference.io/flexbox/

// 6. gird
    flex-box와 grid의 차이 및 정렬case 상세히 봐서 눈에 익힐 것
    https://cssreference.io/css-grid/

// 7. 연결선택자
    section p { ... }  - section(부모요소)에 포함된 모든 p
    section > p { ... } - section(부모요소)의 자식요소에 포함된 p
    h1 + p { ... } - h1의 형제인 p요소 중 첫번째 p / 인접형제 선택자(adjacent selector)
    h1 ~ p { ... } - h1의 형제인 모든 p요소

// 8. 속성선택자
    a[href] { ... } - a중 href속성을 가진 a를 선택 (a [href]와 같이 띄워쓰지 말 것)
    a[target = "_blank"] { ... } - a중 target속성의 값이 "_blank"인 a를 선택
    [class ~= "button"] { ... } - button이라는 단어가 포함된 class를 선택 
                                (단, buttons or flat-button 같이 button이라는 다른 글자가 연결된 경우 선택X)
                                class="red button" 의 경우 button이 한 단어로 취급되므로 선택
    a[title |= us] { ... } - title의 속성이 "us"이거나 "us-"로 시작하는 a 선택
                            (us-english 선택O, usa 선택X)
    a[title ^= eng] { ... } - title의 속성이 "eng"로 시작하는 a 선택
    a[href $= xls] { ... } - href의 속성이 "xls"로 끝나는 a 선택
    a[href *= w3] { ... } - href의 속성 중 "w3"이 포함된 a 선택

// 9. 가상클래스 선택자
    <사용자 동작에 반응하는 가상클래스>
    :link - 방문하지 않은 링크에 스타일 적용 (매우 많이 사용)
    :visted - 방문한 링크에 스타일 적용 (적절히 사용)
    :active - 활성화 했을 때 스타일 적용 (거의 안씀)
    :hover - 마우스 포인터를 올려놓으면 스타일 적용 (많이 사용)
    :focus - 웹요소에 초첨이 맞추어졌을 때 스타일 적용 (ex text 입력창이 활성화 됐을 때)

    <요소의 상태에 따른 가상클래스>
    :target - 앵커의 목적지가 되는 부분의 스타일 적용
    :enabled, :disabled - 활성화된 요소, 비활성화된 요소 선택 시
                        (예) textarea에서 수정불가하도록 disabled속성을 걸어둔 경우 해당 영역필드의 선택가능
    :checked - checkbox와 radio에서 checked속성이 있는 요소의 스타일 적용
                (예) #signup input:checked + label { ... }
                    input 요소에 checked 속성이 추가되었을 때 label의 요소 스타일 변경.
                    -> radio or checkbox선택 시 'label의 색상', '글자 굵기', '글자 사이즈' 등 스타일 적용가능!!!! 

    <문서구조를 사용하는 가상클래스>
    :first-child - 여러 요소 중 첫 번째 자식요소 선택
    :last-child - 여러 요소 중 마지막 자식요소 선택
    :only-child - 여러 요소 중 자식요소가 하나일 때 선택
    :nth-child(숫자 또는 수식) - 지정한 위치의 자식요소 선택  (n을 포함한 수직으로 나타낸 경우 n=0부터)
                                (예) :nth-child(3), :nth-child(even), :nth-child(2n+1), :nth-child(n+4), :nth-child(-n+4)
                                    3번째 자식요소,  짝수 자식요소,     홀수 자식요소,      4번째부터 끝까지, 4번째 자식요소 까지
    A:nth-of-type(숫자 또는 수식) - A요소를기준으로 지정한 위치의 자식요소를 선택

    <논리적 조합에 따른 가상클래스>
    :not() - 괄호 안에 있는 요소를 제외한
    :is() - 같은 스타일의 여러요소를 묶을때
            (예) h1:hover, h2:hover, h3:hover { ... } 를 축약 :is(h1, h2, h3):hover { ... }
    A:has(B) - A라는 요소에 B라는 요소가 있을때 선택
        nav:has(a:hover) a:not(:hover){ opacity:0.3; }
        nav 요소에 a:hover 선택자가 있다면, :hover가 선택되지 않는 링크에 스타일 적용
        -> nav에서 선택한 요소외에 나머지 흐리게

    <가상요소>
    ::first-line - 첫째 줄에 스타일 적용
    ::first-letter - 첫째 글자에 스타일 적용
    ::before - 내용의 앞에 스타일 적용 (주로 콘텐츠(이미지) 삽입)
    ::after - 내용의 뒤에 스타일 적용 (주로 콘텐츠(이미지) 삽입)

// 10. CSS함수 적용
    :root와 var()
        :root내 작성된 함수를 var()로 불러와서 적용
    clac(계산식) - 수치계산
    min(값1, 값2 ...) - 값들 중 최솟값 적용
    max(값1, 값2 ...) - 값들 중 최댓값 적용
    clamp(최솟값, 최적값, 최댓값)
                                (예) font-size: clamp(1rem, 2vw, 2rem) - 폰트사이즈를 2vw로 적용하나 최소 1rem, 최대 2rem을 넘지 않도록 한다.
    filter: 함수 - 다양한 시각효과 추가
        filter: blur() - 흐리게
        filter: brightness() - 밝기
        filter: contrast() - 대비
        filter: drop-shadow() - 그림자추가
        filter: grayscale() - 회색조
        filter: invert() - 색상반전
        filter: sepia() - 세피아톤
        filter: opacity() - 불투명도
        filter: hue-rotate() - 색상환에서 색상값 회전
        filter: saturate() - 채도

sibling
DOM tree search(traversal)